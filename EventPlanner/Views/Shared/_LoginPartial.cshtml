@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


<div class="eventContainer"> 
<ul class="navbar-nav">

    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!.Substring(0, 6)</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
</div>

<style>
    h1, p, tr, td, table, li, nav, ul {
        color: white;
    }
    
   
    button {
        border-radius: 20px;
        color: #fff;
        
    }
    button:hover {
            background-color: #00BCD4;
    }
    
    button:after {
        content: '';
        display: block;
        width: 0;
        height: 2px;
        background: #00BCD4;
        transition: width .3s;
    }

    .nav-item {
        list-style-type: none;
    }
</style>